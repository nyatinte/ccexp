import { render } from 'ink-testing-library';
import type { ClaudeFileInfo } from '../../_types.js';
import { createClaudeFilePath } from '../../_types.js';
import { FileItem } from './FileItem.js';

// „ÉÜ„Çπ„ÉàÁî®„ÅÆClaudeFileInfo‰ΩúÊàê„Éò„É´„Éë„Éº
const createMockFile = (
  name: string,
  type: ClaudeFileInfo['type'],
  path = `/test/${name}`,
): ClaudeFileInfo => ({
  path: createClaudeFilePath(path),
  type,
  size: 1024,
  lastModified: new Date('2024-01-01'),
  commands: [],
  tags: [],
});

if (import.meta.vitest) {
  const { describe, test, expect } = import.meta.vitest;

  describe('FileItem', () => {
    test('CLAUDE.md„Éï„Ç°„Ç§„É´„ÅÆË°®Á§∫', () => {
      const file = createMockFile('CLAUDE.md', 'claude-md');

      const { lastFrame } = render(
        <FileItem file={file} isSelected={false} isFocused={false} />,
      );

      expect(lastFrame()).toContain('CLAUDE.md');
      expect(lastFrame()).toContain('üìù'); // claude-md„Ç¢„Ç§„Ç≥„É≥
    });

    test('CLAUDE.local.md„Éï„Ç°„Ç§„É´„ÅÆË°®Á§∫', () => {
      const file = createMockFile('CLAUDE.local.md', 'claude-local-md');

      const { lastFrame } = render(
        <FileItem file={file} isSelected={false} isFocused={false} />,
      );

      expect(lastFrame()).toContain('CLAUDE.local.md');
      expect(lastFrame()).toContain('üîí'); // claude-local-md„Ç¢„Ç§„Ç≥„É≥
    });

    test('„Çπ„É©„ÉÉ„Ç∑„É•„Ç≥„Éû„É≥„Éâ„Éï„Ç°„Ç§„É´„ÅÆË°®Á§∫', () => {
      const file = createMockFile('test-command.md', 'slash-command');

      const { lastFrame } = render(
        <FileItem file={file} isSelected={false} isFocused={false} />,
      );

      expect(lastFrame()).toContain('test-command.md');
      expect(lastFrame()).toContain('‚ö°'); // slash-command„Ç¢„Ç§„Ç≥„É≥
    });

    test('ÈÅ∏ÊäûÁä∂ÊÖã„ÅÆË°®Á§∫', () => {
      const file = createMockFile('CLAUDE.md', 'claude-md');

      const { lastFrame } = render(
        <FileItem file={file} isSelected={true} isFocused={false} />,
      );

      expect(lastFrame()).toContain('CLAUDE.md');
      // ÈÅ∏ÊäûÁä∂ÊÖã„ÅÆË¶ñË¶öÁöÑË°®Áèæ„Åå„ÅÇ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
    });

    test('„Éï„Ç©„Éº„Ç´„ÇπÁä∂ÊÖã„ÅÆË°®Á§∫', () => {
      const file = createMockFile('CLAUDE.md', 'claude-md');

      const { lastFrame } = render(
        <FileItem file={file} isSelected={false} isFocused={true} />,
      );

      expect(lastFrame()).toContain('CLAUDE.md');
      expect(lastFrame()).toContain('‚ñ∫ '); // „Éï„Ç©„Éº„Ç´„ÇπÊôÇ„ÅÆ„Éó„É¨„Éï„Ç£„ÉÉ„ÇØ„Çπ
    });

    test('ÈÅ∏ÊäûÔºã„Éï„Ç©„Éº„Ç´„ÇπÁä∂ÊÖã„ÅÆË°®Á§∫', () => {
      const file = createMockFile('CLAUDE.md', 'claude-md');

      const { lastFrame } = render(
        <FileItem file={file} isSelected={true} isFocused={true} />,
      );

      expect(lastFrame()).toContain('CLAUDE.md');
      expect(lastFrame()).toContain('‚ñ∫ '); // „Éï„Ç©„Éº„Ç´„ÇπÊôÇ„ÅÆ„Éó„É¨„Éï„Ç£„ÉÉ„ÇØ„Çπ
    });
  });
}
